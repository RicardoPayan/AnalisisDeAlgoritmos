#1er algoritmo

CONST N= ...;
TYPE TPolinomio = array[0..N] of real;

FUNCTION EvaluaPolinomio (C: TPolinomio; X:REAL) : REAL;
    VAR i,j : INTEGER;
        XN, S: REAL;
    BEGIN
        S:= C[O];
        FOR i:= 0 TO N DO BEGIN
            XN:= 1.0;
            FOR j:= 1 TO i DO
                XN:= XN * X;
            S:= S + C[i] * XN;
            END;
        EvaluaPolinomio:=S;
    END {EvaluaPolinomio};


#2do algoritmo
FUNCTION Potencia (X: REAL; j:INTEGER) : REAL;
    VAR t: REAL;
    BEGIN
        IF j=0 THEN Potencia=1.0
        ELSE IF (j mod 2) = 1 THEN Potencia:= X * Potencia (X, j-1)
        ELSE BEGIN
            t:= Potencia(X, j DIV 2);
            Potencia:= t*t;
            END;
    END{Potencia};

FUNCTION EvaluaPolinomio(C: TPolinomio; X: REAL) : REAL;
    VAR i: INTEGER;
        S: REAL;
    BEGIN
        S:= C[0];
        FOR i:= 0 TO N DO
            S:= S + C[i] * Potencia(X, i);
        EvaluaPolinomio:=S;
    END {EvaluaPolinomio};

#3er algoritmo

FUNCTION EvaluaPolinomio(C: TPolinomio; X:REAL): REAL;
    VAR i: INTEGER;
        XN,S: REAL;
    BEGIN
        XN:= 1.0;
        S:= C[0];
        FOR i:= 0 TO N DO BEGIN
            XN:= XN*X;  
            S:= S + C[i]*XN;
        END;
        EvaluaPolinomio:= S;
    END {EvaluaPolinomio};

#4to algoritmo
FUNCTION EvaluaPolinomio(C: TPolinomio; X: REAL): REAL;
    VAR i: INTEGER;
        S: REAL;
    BEGIN
        S:= 0.0;
        FOR i:= N DOWNTO 0 DO
            S:= S*X + C[i];
        EvaluaPolinomio:= S;
    END {EvaluaPolinomio}